package com.java.lms.dao;

public class Practice {
	

	@Override
	public List<Leave> pendingLeaveList(int mgrId) throws ClassNotFoundException, SQLException {
		Leave leave = null;
		List<Leave> pendingList = new ArrayList<Leave>();
		connection = ConnectionHelper.getConnection();
		
		String query = "select * from leave_history where emp_id in\r\n"
				+ "(\r\n"
				+ "select Emp_Id from employee where emp_manager_id= ? \r\n"
				+ ") and leave_status = 'PENDING'";
		
		ps = connection.prepareStatement(query);
		ps.setInt(1, mgrId);
		
		ResultSet rs = ps.executeQuery();
		
		while(rs.next()) {
			leave = new Leave();
			leave = new Leave();
			leave.setLeaveId(rs.getInt("leave_id"));
	        leave.setEmpId(rs.getInt("emp_id"));
	        leave.setLeaveStDt(rs.getDate("leave_start_date"));
	        leave.setLeaveEndDt(rs.getDate("leave_end_date"));
	        leave.setLeaveType(rs.getString("leave_type"));
	        leave.setLeaveReason(rs.getString("leave_reason"));
	        leave.setLeaveStatus(rs.getString("leave_status"));
	        leave.setLeaveMgrCmts(rs.getString("leave_mngr_comments"));
	        leave.setNoOfDays(rs.getInt("leave_no_of_days"));
	        
	        pendingList.add(leave);
		}
		
		return pendingList;
		
	}

	@Override
	public String manageLeaveDao(int leaveId, int mgrId, boolean isAccepted, String mgrComment) throws ClassNotFoundException, SQLException {
		connection = ConnectionHelper.getConnection();
        String query = "SELECT * FROM leave_history WHERE leave_id = ?";
        ps = connection.prepareStatement(query);
        ps.setInt(1, leaveId);
        ResultSet rs = ps.executeQuery();

        if (!rs.next()) {
            return "Leave request not found.";
        }

        int empId = rs.getInt("emp_id");
        int noOfDays = rs.getInt("leave_no_of_days");
        String leaveStatus = isAccepted ? "APPROVED" : "DENIED";

        if (!isAccepted) {
            EmployDao employDao = new EmployDaoImpl();
            Employ employee = employDao.searchEmployDao(empId);
            employee.setEmpLeaveBal(employee.getEmpLeaveBal() + noOfDays);
            employDao.updateEmployDao(empId, employee.getEmpLeaveBal());
        }

        String updateQuery = "UPDATE leave_history SET LEAVE_STATUS = ?, LEAVE_MNGR_COMMENTS = ? WHERE leave_id = ?";
        ps = connection.prepareStatement(updateQuery);
        ps.setString(1, leaveStatus);
        ps.setString(2, mgrComment);
        ps.setInt(3, leaveId);

        int updatedRows = ps.executeUpdate();

        if (updatedRows > 0) {
            return "Leave request " + (isAccepted ? "approved" : "denied") + " successfully.";
        } else {
            return "Failed to update leave request.";
        }
	}
}
